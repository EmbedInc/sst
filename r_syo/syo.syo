/*   Syntax definition of the syntax definition language.
/*
.symbol command[sst_r_syo_sy_command]
.symbol declare[sst_r_syo_sy_declare]
.symbol define[sst_r_syo_sy_define]
.symbol expression[sst_r_syo_sy_expression]
.symbol item[sst_r_syo_sy_item]
.symbol untagged_item[sst_r_syo_sy_untagged_item]
.symbol string[sst_r_syo_sy_string]
.symbol char[sst_r_syo_sy_char]
.symbol end_range[sst_r_syo_sy_end_range]
.symbol symbol[sst_r_syo_sy_symbol]
.symbol integer[sst_r_syo_sy_integer]
.symbol space[sst_r_syo_sy_space]
.symbol pad[sst_r_syo_sy_pad]

.define COMMAND .as
  .charcase [lower]
  pad (
  .EOD[1]
  .or define[2]
  .or declare[3]
  )

.define DECLARE .as
  '.symbol' space
  symbol[1] pad
  .occurs [0 to 1] (
    '[' symbol[1] ']'
    .occurs [0 to 1] (space 'external'[2])
    )

.define DEFINE .as
  '.define' space symbol[1] space '.as' space expression[1]

.define EXPRESSION .as
  item
  (
    space
    ('.or' space expression[2])
    .or expression[1]
    )
  .or .null[3]

.define ITEM .as
  untagged_item
  ('[' integer[1] ']') .or .null[2]

.define UNTAGGED_ITEM .as
  ('(' pad expression[7] pad ')')
  .or '.eol'[1]
  .or '.eof'[2]
  .or '.eod'[12]
  .or ('.range' pad '[' pad char[1] space 'thru' space char[1] pad ']')[5]
  .or ('.occurs' pad '[' pad integer[1] space 'to' space end_range pad ']'
    space item)[6]
  .or ('.charcase' pad '[' pad
    ('upper'[1] .or 'lower'[2] .or 'off'[3])
    pad ']')[8]
  .or ('.upto'[10] space item)
  .or ('.not'[11] space item)
  .or '.null'[9]
  .or ('.optional' space item[13])
  .or symbol[3]
  .or string[4]

.define STRING .as
  (
    "'"
    (.occurs [0 to INF] (.range [' ' thru '&'] .or .range ['(' thru '~']))[1]
    "'"
    )
  .or
  (
    '"'
    (.occurs [0 to INF] (.range [' ' thru '!'] .or .range ['#' thru '~']))[1]
    '"'
    )

.define CHAR .as
      ("'" (.range [' ' thru '&'] .or .range ['(' thru '~']) "'")
  .or ('"' (.range [' ' thru '!'] .or .range ['#' thru '~']) '"')

.define END_RANGE .as
  integer[1] .or 'inf'[2]

.define SYMBOL .as
  .range ['a' thru 'z']
  .occurs [0 to 31] (
    .range ['a' thru 'z']
    .or .range ['0' thru '9']
    .or '_'
    .or '$'
    )

.define INTEGER .as
  .occurs [1 to INF] .range ['0' thru '9']


.define SPACE .as
  (' ' .or .eol)
  pad

.define PAD .as
  .occurs [0 to INF] (
    ' '
    .or .EOL
    .or .EOF
    .or ('/*' .occurs [0 to INF] .range [' ' thru '~'] .EOL)
    )
